---
import {Icon} from "astro-icon/components";
---

<div class="relative flex items-center justify-center">
  <button
    type="button"
    id="theme-toggle"
    aria-label="Toggle theme"
    class="flex cursor-pointer items-center bg-transparent hover:opacity-75 transition-opacity"
  >
    <Icon class="text-gray-900 dark:hidden dark:text-white" name="lucide:sun" size={18} />
    <Icon class="hidden text-gray-900 dark:inline dark:text-white" name="lucide:moon" size={18} />
  </button>
</div>

<script is:inline>
  const themeToggle = document.querySelector("#theme-toggle");

  function setThemeColor(color) {
    // Select the theme-color meta tag
    let metaThemeColor = document.querySelector('meta[name="theme-color"]');
    
    // If it doesn't exist, create it
    if (!metaThemeColor) {
        metaThemeColor = document.createElement('meta');
        metaThemeColor.name = "theme-color";
        document.head.appendChild(metaThemeColor);
    }
    
    // Update the content attribute to the desired color
    metaThemeColor.setAttribute('content', color);
  }

  function applyTheme(theme) {
    document.body.classList.remove("dark-mode", "light-mode");
    document.documentElement.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);

    if (theme === "light") {
      document.body.classList.add("light-mode");
      setThemeColor('#ffffff');
      localStorage.removeItem("isDark");
    } else if (theme === "dark") {
      document.body.classList.add("dark-mode");
      setThemeColor('#000000');
      localStorage.setItem("isDark", "true");
    } else {
      // System theme
      systemThemeUpdate();
    }
  }

  function systemThemeUpdate() {
    const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";

    document.body.classList.remove("light-mode", "dark-mode");
    document.documentElement.setAttribute("data-theme", systemTheme);

    if (systemTheme === "dark") {
      document.body.classList.add("dark-mode");
      setThemeColor('#000000');
      localStorage.setItem("isDark", "true");
    } else {
      document.body.classList.add("light-mode");
      setThemeColor('#ffffff');
      localStorage.removeItem("isDark");
    }
  }

  function toggleTheme() {
    const currentTheme = localStorage.getItem("theme");
    
    // Simple toggle: light <-> dark
    if (currentTheme === "dark") {
      applyTheme("light");
    } else {
      applyTheme("dark");
    }
  }

  // Initialize theme on load - default to system preference if no saved theme
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) {
    applyTheme(savedTheme);
  } else {
    // No saved preference, use system theme but don't save it as "system"
    const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    applyTheme(systemTheme);
  }

  // Listen for system theme changes only if no user preference is saved
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", () => {
    if (!localStorage.getItem("theme")) {
      const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
      applyTheme(systemTheme);
    }
  });

  // Add click event listener
  themeToggle.addEventListener("click", toggleTheme);
</script>